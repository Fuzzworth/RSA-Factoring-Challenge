#!/usr/bin/python3
from sys import argv
def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def pollard_rho(n):
    if n % 2 == 0:
        return 2

    x = 2
    y = 2
    d = 1

    f = lambda x: (x**2 + 1) % n

    while d == 1:
        x = f(x)
        y = f(f(y))
        d = gcd(abs(x - y), n)

        if d == n:
            return None  # Failed to find a factor

    return d

if len(argv) != 2:
    print("{} <file>".format(argv[0]))
with open(argv[1]) as factor_file:
    for line in factor_file:
        line = int(line)
        factor = pollard_rho(line)
        print("{:d}={:d}*{:d}".format(line, int(line / factor), int(factor)))
